{
	"name": "pl_fail_act",
	"properties": {
		"activities": [
			{
				"name": "Get Metadatafor source storage",
				"type": "GetMetadata",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_get_metadata",
						"type": "DatasetReference",
						"parameters": {
							"dir_param": {
								"value": "@pipeline().parameters.diectory_parameter",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Get Metadatafor source storage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadatafor source storage').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item()['name'],pipeline().parameters.file_parameter)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Fail1",
										"type": "Fail",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"message": "file not found",
											"errorCode": "404"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Delete1",
										"type": "Delete",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "Binary1",
												"type": "DatasetReference",
												"parameters": {
													"dir_param": {
														"value": "@pipeline().parameters.diectory_parameter",
														"type": "Expression"
													},
													"file_param": {
														"value": "@pipeline().parameters.file_parameter",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Get Metadatafor source storage_copy1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Binary1",
						"type": "DatasetReference",
						"parameters": {
							"dir_param": {
								"value": "@pipeline().parameters.diectory_parameter",
								"type": "Expression"
							},
							"file_param": {
								"value": "@pipeline().parameters.file_parameter",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "If Condition2",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Metadatafor source storage_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('Get Metadatafor source storage_copy1').output.exists",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail2",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "file not found",
								"errorCode": "404"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Delete2",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "Binary1",
									"type": "DatasetReference",
									"parameters": {
										"dir_param": {
											"value": "@pipeline().parameters.diectory_parameter",
											"type": "Expression"
										},
										"file_param": {
											"value": "@pipeline().parameters.file_parameter",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"diectory_parameter": {
				"type": "string"
			},
			"file_parameter": {
				"type": "string"
			}
		},
		"variables": {
			"set child": {
				"type": "Array"
			},
			"name setting": {
				"type": "String"
			},
			"append names": {
				"type": "Array"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-03-27T13:14:48Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}